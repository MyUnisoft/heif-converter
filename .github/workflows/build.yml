name: Build and Retrieve Compiled Files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linuxmusl
            arch: x64
          - os: ubuntu-22.04
            platform: linux
            arch: x64
          # - os: macos-11
          #   platform: darwin-x64
          - os: windows-2020
            platform: win32
            arch: x64
          - os: windows-2020
            platform: win32
            arch: ia32

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Create a folder for the tarball
      run: mkdir release

    - name: Build with Docker (Windows)
      if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'windows')
      env:
        PLATFORM: ${{ matrix.platform }}-${{ matrix.arch }}
      run: |
        # Build image
        docker build --build-arg PLATFORM=${{ env.PLATFORM }} --build-arg ARCH=${{ matrix.arch }} -t ${{ env.PLATFORM }} . -f ./.github/Dockerfile

        # Run container and copy the built file
        docker run --name ${{ env.PLATFORM }} ${{ env.PLATFORM }}
        docker cp ${{ env.PLATFORM }}:C:/heif-converter/src/build/Release/converter.node ./release/converter.${{ env.PLATFORM }}.node

        # Clean up the Docker container
        docker container rm ${{ env.PLATFORM }}

    - name: Create tarball of the release folder
      run: |
        cd ./release
        tar -czf ${{ matrix.platform }}-${{ matrix.arch }}.tar.gz *

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: ./release/${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
