name: Build Node.js Artifact

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'src/lib.cc'

jobs:
  push_on_main:
    if: github.event_name == 'push'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linuxmusl-x64
          - os: ubuntu-22.04
            platform: linux-x64
          - os: macos-12
            platform: darwin-x64
          - os: windows-latest
            platform: win32-x64
          - os: windows-latest
            platform: win32-ia32

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies and test
      run: |
        npm install
        npm run test

  pull_request:
    if: github.event_name == 'pull_request'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linuxmusl-x64
          - os: ubuntu-22.04
            platform: linux-x64
          - os: macos-12
            platform: darwin-x64
          - os: windows-latest
            platform: win32-x64
          - os: windows-latest
            platform: win32-ia32

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Create a folder for the tarball
      run: mkdir -p release/${{ matrix.PLATFORM }}/lib

    - name: Build and run Docker container
      if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'windows')
      run: |
        # Build image
        docker build --build-arg PLATFORM=${{ matrix.PLATFORM }} -t ${{ matrix.PLATFORM }} . -f ./.github/Dockerfile

        # Run container and copy the built file
        docker run --name ${{ matrix.PLATFORM }} ${{ matrix.PLATFORM }}

        # Copy .node file from the container        
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/converter.node ./release/${{ matrix.PLATFORM }}/lib/converter.${{ matrix.PLATFORM }}.node
    
    - name: Copy .dll files from the container (Windows)
      if: contains(matrix.os, 'windows')
      run: |
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/heif.dll ./release/${{ matrix.PLATFORM }}/lib/heif.dll
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/turbojpeg.dll ./release/${{ matrix.PLATFORM }}/lib/turbojpeg.dll
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/jpeg62.dll ./release/${{ matrix.PLATFORM }}/lib/jpeg62.dll
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/libde265.dll ./release/${{ matrix.PLATFORM }}/lib/libde265.dll
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/libx265.dll ./release/${{ matrix.PLATFORM }}/lib/libx265.dll
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/libpng16.dll ./release/${{ matrix.PLATFORM }}/lib/libpng16.dll
        docker cp ${{ matrix.PLATFORM }}:/heif-converter/src/build/Release/zlib1.dll ./release/${{ matrix.PLATFORM }}/lib/zlib1.dll

    - name: Clean up the Docker container (Windows and Linux)
      if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'windows')
      run: docker container rm ${{ matrix.PLATFORM }}

    - name: Configure and Build on OSX
      if: contains(matrix.os, 'mac')
      run: |
        # Build project
        npm install --omit-optional
        npm run configure
        npm run build

        # Run tests
        npm run test

        # Copy .node in the release folder
        cp ./src/build/Release/converter.node ./release/${{ matrix.PLATFORM }}/lib/converter.${{ matrix.PLATFORM }}.node

    - name: Create tarball of the release folder
      run: |
        cd ./release
        tar -czf ${{ matrix.platform }}.tar.gz *

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: ./release/${{ matrix.platform }}.tar.gz
